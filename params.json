{"name":"Fast Allocation of Gaussian Process Experts","tagline":"Gaussian Process, Mixture of Gaussian Process Experts","body":"Fast Allocation of Gaussian Process Experts\r\n\r\nAuthor: Trung V. Nguyen (trung.ngvan@gmail.com) and Edwin V. Bonilla\r\n\r\nThis is the package MSGP that implements the mixture of sparse Gaussian Process experts model in the paper 'Fast Allocation of Gaussian Process Experts'.\r\n\r\n1. Datasets\r\n-----------------------------\r\nThe 4 datasets (kin40k, pol, pumadyn32nm, and motorcycle) are provided in the 'data' directory.\r\n\r\nFor kin40k, pol, and pumadyn32nm, call load_data() to get the training and testing data used in the paper.\r\n\r\nExample: [x,y,xtest,ytest] = load_data('data/kin40k','kin40k');\r\n\r\n- The 100k songs dataset is not provided due to its large size but can be obtained at\r\n http://archive.ics.uci.edu/ml/datasets/YearPredictionMSD\r\n\r\nTo get the same training and testing data as in the paper, simply run:\r\n\r\nsrc/scripts/song100kscript.m \r\n\r\n2. How to run MSGP\r\n----------------------------\r\nThe two main functions for using MSGP are src/msgp_train.m and src/msgp_predict.m\r\nSee src/scripts/demo.m to see the example of using msgp on the motorcycle dataset.\r\n\r\n3. Other baselines\r\n----------------------------\r\nThe localFITC methods can be run with src/gps_fitc_train.m and src/gps_fitc_predict.m.\r\n\r\nSee src/scripts/randpar_batch.m for an example.\r\n\r\nThe SoD baseline is in src/scripts/song100k_sod.m\r\n\r\nThe GPSVI baseline is in src/gpsvi/batch_gpsvi_big.m (note that it requires the learned hyperparameters of SoD).\r\n\r\nOther baselines for the 100k dataset can be found in src/scripts/song100k_baselines.m.\r\n\r\n4. Multicore implementation\r\n----------------------------\r\nThe main code for multicore is in libs/multicore/msgp. Email me if you have problems using multicore with MSGP.\r\n\r\n5. Dependencies\r\n----------------------------\r\n- MSGP requires 3 external libraries: GPML [1], GPRApprox_Comparison [2], and SPGP_dist [3]\r\nin addition to my own library of utility function (myutils)\r\n- If multicore library is used, it also requires the multicore package\r\n- If GPSVI is used, it requires the gpsvi implementation by Edwin Bonilla which depends on the \r\nnetlab and myutil package\r\nAll libraries are included for your convenience.\r\n\r\nReferences:\r\n----------------------------\r\n[0] Nguyen, Trung Van and Bonilla, Edwin. Fast Allocation of Gaussian Process Experts. ICML 2014.\r\n\r\n[1] Rasmussen, Carl Edward and Nickisch, Hannes. Gaussian processes for machine learning (gpml) toolbox. The\r\nJournal of Machine Learning Research, 11:3011â€“3015, 2010\r\n\r\n[2] Chalupka, Krzysztof, Williams, Christopher KI, and Murray, Iain. A framework for evaluating approximation\r\nmethods for gaussian process regression. arXiv preprint arXiv:1205.6326, 2012.\r\n\r\n[3] Snelson, Ed and Ghahramani, Zoubin. Sparse gaussian processes using pseudo-inputs, NIPS 2006.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}